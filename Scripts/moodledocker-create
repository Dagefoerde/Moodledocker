#!/usr/bin/env ruby
require_relative 'moodledocker-common.rb'
require 'fileutils'

def create_if_empty(name, srcdir)
  if !MoodleDocker.name_valid? (name)
    return false
  end

  if !File.directory?(srcdir)
    puts "Error: Source directory \"#{srcdir}\" does not exist."
    return false
  end

  if MoodleDocker.project_exists?(name)
    puts "  Error: Project directory \"#{name}\" already exists."
    return false
  end

  # Make sure everything happens in the *correct* directory!
  puts "Switch to base directory #{MoodleDocker.base_dir}"
  FileUtils.cd(MoodleDocker.base_dir) do
    puts "  Create directories."
    datadir = name + "/data"
    FileUtils.mkdir( [name, datadir, datadir + "/db", datadir + "/moodledata"] )

    puts "  Copy templates."
    FileUtils.cp("Metafiles/Templates/docker-compose.yml", name + "/docker-compose.yml")

    puts "  Change owner of Moodledata directory to www-data (requires SU privileges)."
    system("sudo chown 33:33 " + datadir + "/moodledata")

    puts "  Symlink external resources."
    File.symlink(srcdir, name + "/moodle")
  end

  puts "Done."
  puts "Docker project directory for \"#{name}\" is now at: #{MoodleDocker.base_dir}/#{name}"
  puts "Start containers using: moodledocker-control #{name} up"
  return true
end


if ARGV.length != 2 then
  puts "Usage: moodledocker-create NAME SRCDIR"
  exit
end

if !create_if_empty(ARGV[0], ARGV[1]) then
  exit!
end

